const Request = function(req) {
  this.path = req;
  this.header = "mock request header";
};

const Response = function() {
  this.header = "mock response header";
  this.locals = {};
};

Response.prototype.json = function(response) {
  console.log(
    `request response cycle is complete. JSON object: ${response} has been sent to client`
  );
};

const express = function() {
  const _middlewares = [];
  let _req = null;
  let _res = null;
  let _processNextMiddleware = false;

  const _processMiddlewares = function() {
    for (middleware of _middlewares) {
      middleware(_req, _res, () => {
        _processNextMiddleware = true;
      });

      if (_processNextMiddleware) {
        _processNextMiddleware = false;
      } else {
        break;
      }
    }
  };

  const _processRequest = function(incomingRequest) {
    _req = new Request(incomingRequest);
    _res = new Response();
    _processMiddlewares();
  };

  const use = function(...args) {
    if (args.length === 1) {
      _middlewares.push(args[0]);
    } else {
      _middlewares.push(args[1]);
    }
  };

  const listen = function(port) {
    console.log(`listening on port ${port}`);
  };

  return { use, listen, _processRequest };
};

module.exports = express;
